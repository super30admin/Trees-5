Time complexity : O(n)
Space complexity : O(1)

/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    
    TreeNode first;
    TreeNode second;
    TreeNode prev;
    public void recoverTree(TreeNode root) {
        
        if(root == null)    return;
        
        TreeNode current = root;
        
        inorder(current);
        
        int temp = first.val;
        first.val = second.val;
        second.val = temp;
        
    }
    
    private void inorder(TreeNode current){
        
        if(current == null) return;
        
        inorder(current.left);
        
        if(prev != null && prev.val > current.val){
            if(second == null){
                first = prev;
                second = current;
            }else{
                second = current;
            }
        }
    
        prev = current;
        
        inorder(current.right);
        
    }
}