/*
// Definition for a Node.
class Node {
    public int val;
    public Node left;
    public Node right;
    public Node next;

    public Node() {}
    
    public Node(int _val) {
        val = _val;
    }

    public Node(int _val, Node _left, Node _right, Node _next) {
        val = _val;
        left = _left;
        right = _right;
        next = _next;
    }
};
*/
// Time Complexity o(n) space complexity o(1);

class Solution {
    public Node connect(Node root) {
       Node level = root;
       if(root==null) return null;
       Node curr = level;
       while(level.left!=null){
          curr=level;
          while(curr!=null){
              curr.left.next=curr.right;
              if(curr.next!=null){
                curr.right.next=curr.next.left;
              }
              curr=curr.next;
          }
          level=level.left;
       }
       return root;
    }
}